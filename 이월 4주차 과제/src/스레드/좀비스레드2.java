package 스레드;

import 생명체.생존자.생존자;
import 생명체.좀비.먹물파스타좀비;
import 생명체.좀비.오렌지좀비;
import 생명체.좀비.좀비;
import 생명체.좀비.짜장면좀비;
import 스레드.음악.전투퍽;

public class 좀비스레드2 implements Runnable {
    //-----------------------------설정값----------------------------------

    생존자 생존자값;
    좀비 좀비값;
    오렌지좀비 오좀;
    짜장면좀비 짜좀;
    먹물파스타좀비 먹좀;
    전투퍽 퍽;
    button bt;


    public 좀비스레드2(button bt) {

    }


    public 좀비스레드2(생존자 b, 좀비 좀, 전투퍽 퍽, button bt, 오렌지좀비 오좀, 먹물파스타좀비 먹좀) {  //객체가 될 것이다.

        생존자값 = b;
        좀비값 = 좀;
        this.퍽 = 퍽;
        this.bt = bt;
        this.오좀 = 오좀;
        this.먹좀 = 먹좀;

/*        오렌지좀비값 = new 좀비(
                "오렌지좀비", "","오렌지맛 산성 뱉기",
                "카악 퉤~~!!!",1,130,
                1380,1500, 생존자값.공격력,
                8000, 600);*/
    }


    //-----------------------------설정값----------------------------------


    @Override
    public void run() {

        try {
            Thread.sleep(4000);
        } catch (Exception e) {

        }  //공격 안 하고 7초 있으면 좀비가 날 때림


        while (생존자값.남은체력 > 0 && 좀비값.남은체력 > 0) {


/*            if (좀비값.남은체력 <= 0) {
                System.out.println("좀비뒤짐ㅋ");

                break;
            }*/


            //내가 아이템 공격을 사용할 때 오렌지좀비의 공격이 4초정도 멈췄으면 좋겠음.
            //내가 아이템 섭취을 사용할 때 오렌지좀비의 공격이 4초정도 멈췄으면 좋겠음.
            if (bt.사냥 == 2 || bt.사냥 == 3) {  //>>아이템공격 선택시


                //여기위치한 이유: 생존자가 아이템사용시 좀비공격 3초 기다려주게 하기위해서.
                try {
                    Thread.sleep(4000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }

                //전투종료되면 아무것도 안 맞고 안 때리게 하기 위한 코드.
                //아래까지 출력되고 좀비스레드2가 끝나서 여기에 추가함.
                if (생존자값.남은체력 <= 0 || 좀비값.남은체력 <= 0) {
                    break;
                } //기다렸다가 좀비가 바로 공격할 수 있으니까 만약 체력이 0이라면 탈출하기.
            }


/*
            if (bt.사냥 == 3) {

                try {
                    Thread.sleep(4000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }

                if (생존자값.남은체력 <= 0 || 좀비값.남은체력 <= 0) {
                    break;
                }  //기다렸다가 좀비가 바로 공격할 수 있으니까 만약 체력이 0이라면 탈출하기.
            }
*/



            //좀비 공격
/*            System.out.println("\n\n\n\n\n\n");
            System.out.println("                                                           <::::::::::::::::::[]==o\n");

            System.out.println("                                                           [   "+좀비이름+"   ]의 공격\n");

            System.out.println("                                                           <::::::::::::::::::[]==o\n\n\n\n");*/

            좀비값.공격(생존자값, 좀비값);


            생존자값.남은체력 = 생존자값.남은체력 - 좀비값.공격력;

            try {
                Thread.sleep(300);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }  //보기 좋으라고 0.3초 잠듦


            //생존자맞음
            //생존자맞아죽음
            if (생존자값.남은체력 <= 0) {

                생존자값.남은체력 = 0;


                생존자값.맞기_결과(좀비값);  //윽..!
                퍽.run();

                생존자값.패배lose();   //사망ㅜㅜ

                break;
            }



            if (bt.사냥123 == 1) {  //오렌지좀비라면 생존자가 맞는 메소드를 이렇게한다.

                //우선 맞고.. 그러고 스킬은 확률상 발동하기
                생존자값.맞기_결과(좀비값);  //윽..! (우선, 좀비의 일반 공격 맞음)
                오좀.오좀살점공격(생존자값, 오좀, 퍽);

            } else if (bt.사냥123 == 2) {  //짜장

                생존자값.맞기_결과(좀비값);  //윽..! (우선, 좀비의 일반 공격 맞음)

                //확률상
/*
                짜좀.짜장살점공격(생존자값, bt);
                넣는 자리가 아닌 것 같아. 생존자 공격결과쪽에 넣어야될 것 같아.
*/

            } else if (bt.사냥123 == 3) {  //먹물

                생존자값.맞기_결과(좀비값);  //윽..! (우선, 좀비의 일반 공격 맞음)
                //스킬발동
                먹좀.먹물공격(생존자값);


            }


/*            //생존자맞음. 살아있음.
            생존자값.맞기_결과(좀비값);  //윽..!
            퍽.run();  //맞는 소리*/
            try {
                Thread.sleep(3000);
            } catch (Exception e) {

            } //서브스레드 시작 후 3초 정지해야 동시에 공격 안 함.




        } //~while

    } //~run


}






