import MusicPlayer.MusicPlayer;
import MusicPlayer.MusicVO;
import 생명체.생명체;
import 생명체.생존자.생존자;
import 생명체.좀비.먹물파스타좀비;
import 생명체.좀비.오렌지좀비;
import 생명체.좀비.좀비;
import 생명체.좀비.짜장면좀비;
import 스레드.button;
import 스레드.엔터스킵스레드;
import 스레드.음악.배경;
import 스레드.음악.전투퍽;
import 스레드.음악.좀비등장;
import 스레드.음악.키보드;
import 스레드.좀비스레드2;
import 아이템.물약;
import 아이템.부품.부품;
import 아이템.부품.부품제조티켓;
import 아이템.살점;
import 아이템.아이템;

import java.util.ArrayList;
import java.util.Scanner;

public class 게임플레이7 {


    public static void main(String[] args) throws InterruptedException {

        //----------------------------- 인스턴스 -------------------------------
        Scanner 입력값 = new Scanner(System.in);
        생명체 생명체값 = new 생명체();
        button bt = new button();



        //------------------------------ 스레드 ------------------------------
        //음악스레드 선언
        //음악스레드 인스턴스 만들고 스레드로 만듦.
        //불러오면 그 클래스의 run 메소드가 시작된다.


        ArrayList<MusicVO> playlist = new ArrayList<MusicVO>();
        playlist.add(new MusicVO("배경음악_스산", ".", 1000,
                "C:\\Users\\한\\Desktop\\자바유튜브음원\\mp3\\Awful_JoshPan.mp3"));
        playlist.add(new MusicVO("음악_전투", ".", 1000,
                "C:\\Users\\한\\Desktop\\자바유튜브음원\\mp3\\Brass Orchid - Bobby Richards.mp3"));
        MusicPlayer mp = new MusicPlayer(playlist);


        Runnable music배경 = new 배경(bt);
        Thread 배경t = new Thread(music배경);


        Runnable music키보드 = new 키보드(bt);  //onOff값을 true로 갖고오고 나중에 false로 바꾸기위해 인자로 받음.
        Thread 키보드t = new Thread(music키보드);

        Runnable 스킵 = new 엔터스킵스레드(bt, 생명체값);
        Thread 스킵t = new Thread(스킵);

        전투퍽 퍽퍽 = new 전투퍽(bt);


        //------------------------------------------------------------


        System.out.println( "\n\n\n\n" +


                " ██╗   ██╗██╗   ██╗███╗   ███╗███╗   ███╗██╗   ██╗    ███████╗ ██████╗ ███╗   ███╗██████╗ ██╗███████╗\n" +
                " ╚██╗ ██╔╝██║   ██║████╗ ████║████╗ ████║╚██╗ ██╔╝    ╚══███╔╝██╔═══██╗████╗ ████║██╔══██╗██║██╔════╝\n" +
                "  ╚████╔╝ ██║   ██║██╔████╔██║██╔████╔██║ ╚████╔╝       ███╔╝ ██║   ██║██╔████╔██║██████╔╝██║█████╗  \n" +
                "   ╚██╔╝  ██║   ██║██║╚██╔╝██║██║╚██╔╝██║  ╚██╔╝       ███╔╝  ██║   ██║██║╚██╔╝██║██╔══██╗██║██╔══╝  \n" +
                "    ██║   ╚██████╔╝██║ ╚═╝ ██║██║ ╚═╝ ██║   ██║       ███████╗╚██████╔╝██║ ╚═╝ ██║██████╔╝██║███████╗\n" +
                "    ╚═╝    ╚═════╝ ╚═╝     ╚═╝╚═╝     ╚═╝   ╚═╝       ╚══════╝ ╚═════╝ ╚═╝     ╚═╝╚═════╝ ╚═╝╚══════╝\n\n\n\n\n\n\n\n\n\n\n\n\n\n"

        );


        System.out.println(
                "                                              Press enter\n\n\n\n\n\n\n\n\n\n\n");

        입력값.nextLine();      //입력값받음

        System.out.println("\n\n\n\n\n\n\n\n");
        System.out.println(
                "                                             < GAME STRAT >\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
        Thread.sleep(1000);







        System.out.println(
                "                                           skip) Press enter\n\n\n\n");
        Thread.sleep(500);



        //음악 스레드(키보드) 시작
        bt.키보드onOff = true;

        키보드t.start();


        //------------------------------------- 멘트 --------------------------------------------------


        //스레드로 만듦. 엔터눌렀을 때 skip 할 수 있도록.

        Thread.sleep(500);  //이거 왜 넣은거지? 글자 출력이 느려지게 하려고

        스킵t.start();  //출력먼저 실행...

        bt.엔터skip = 입력값.nextLine();  //여기서 내가 엔터를 치면 ""값이 button에 들어가고 while이 멈추겠지?



        Scanner sc = new Scanner(System.in);
        bt.당신이름 = sc.nextLine();
        System.out.println("\n\n\n\n\n");






        //음악 스레드(배경) 시작
        mp.play();





        /*System.out.println("20xx년도 한국, 좀비바이러스가 창궐했습니다.");*/
        System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
        System.out.println("좀비 바이러스의 원인은 방사능으로 알려져있습니다.");
        System.out.println("[ "+bt.당신이름+" ] 님은 현재 생존자들의 임시 아지트에 숨어있습니다.");
        System.out.println("사태 직후에 피신했으니 이곳에 온지 열흘이 지났죠.");
        System.out.println("인간의 문명이 아예 망가지진 않아서 다행이지만, 이곳에도 언제 좀비떼가 들이닥칠지 모릅니다.");
        System.out.println("어느 날 아지트 내에서 UN군이 한국 어느 항구에 상륙한다는 소문을 듣게 됩니다.");
        System.out.println("UN군이 언제, 어디서 구하러 오는지 알 수 없으니 직접 연락할 방법을 찾아봅시다.");
        System.out.println("참고로 방사능에 오염된 좀비라서 그 좀비의 살점을 먹으면 잠깐이지만 좀비로 변신 가능합니다.");

        Thread.sleep(2000);
/*
        System.out.println(" --------------    좀비사태 11일차    -------------- \n\n\n\n\n");
*/




        //----------------------------- 인스턴스 만듦. 생성자로 초기화된 세팅값 ---------------------------------------------------

        부품 부품1 = new 부품("통신장치부품1 : 배터리",20000,1,"1.",3);
        부품 부품2 = new 부품("통신장치부품2 : 라디오", 50000, 2,"2.", 2);
        부품 부품3 = new 부품("통신장치부품3 : 마이크", 80000, 0,"3.", 1);
        부품 부품값 = new 부품();
        부품제조티켓 티켓 = new 부품제조티켓("부품제조티켓", 0, 1, "..");

        bt.생공격력초기화 = 80;  //공격력을 계속 바꿔야되서 여기서만 수정하면 되게끔 만듦;
        bt.레벨업공격력업 = 20;
        bt.레벨업피통업 = 200;

        생존자 생존자값 = new 생존자(
                bt.당신이름,"",1,bt.생공격력초기화,
                1500,1500,
                0,140000,0,0);
        좀비 오렌지좀비값 = new 좀비(
                "오렌지좀비", bt.당신이름,"오렌지맛 산성 뱉기","카악 퉤~~!!!",1,100,
                1000,1000, 생존자값.공격력,8000, 600);
        좀비 짜장면좀비값 = new 좀비(
                "짜장면좀비", bt.당신이름,"면발로 때리기","후루루룩~~!!",2,120,
                1200,1200,
                생존자값.공격력,12000, 700);
        좀비 먹물파스타좀비값 = new 좀비(
                "먹물파스타좀비", bt.당신이름,"눈에 먹물 뿌리기","먹물 받아랏. 찍~~!!",3,150,
                1500,1500,
                생존자값.공격력,18000, 800);
        좀비 좀비값 = new 좀비();
        아이템 아이템들 = new 아이템();
        살점 살점값 = new 살점();
        오렌지좀비 오좀 = new 오렌지좀비();
        짜장면좀비 짜좀 = new 짜장면좀비();
        먹물파스타좀비 먹좀 = new 먹물파스타좀비();
        살점 오렌지살점 = new 살점("오렌지좀비의 살점", 4, 2,"1.");
        살점 짜장면살점 = new 살점("짜장면좀비의 살점", 1, 1,"2.");
        살점 먹물살점 = new 살점("먹물파스타좀비의 살점", 0, 1,"3.");
        물약 피물약1 = new 물약("좀비의 피", 3000, 3, "4.", 600);
        물약 피물약2 = new 물약("농후한 좀비의 피", 4500, 1, "5.", 1000);
        물약 피물약값 = new 물약();






        //------------------------------안전지대---------------------------------------------------


        //상태확인
        System.out.println("\n\n\n\n\n");
        생존자값.스탯창(bt.당신이름);
        System.out.println();

        System.out.println("\n\n");
        System.out.println("1.좀비사냥\n2.상태확인\n3.지하 전당포\n4.배낭\n5.부품조합설계도\n6.스토리 및 도움말\n\n");


        // 지옥의 반복문 안에서 계속 도는 형태로 만들거야. 탈출 안 시키겠네.
        // 반복시킬 때 내 상태 리셋되는건 아니겠지?
        while (true) {  // 여기가 홈

            int 당신의선택 = 입력값.nextInt();   //값받음


            // 1.사냥 선택
            if (당신의선택 == 1) { //1.사냥 2.상태확인 3.지하전당포 4.배낭 5.설계도 6.스토리 및 도움말


                System.out.println("사냥을 떠납니다. 난이도를 선택해주세요 (0.이전)\n");

                System.out.println("1.반경 15미터 편의점\n" +
                        "2.반경 200미터 초등학교\n" +
                        "3.반경 750미터 철물점\n\n\n\n");


                // 123이외입력시 입력 다시 할 수 있게 반복
                while (true) {  //while 장소123

                    if (생존자값.남은체력 == 0) {  //while 탈출 못해서 코드 추가함 <<언제?
                        break;
                    }

                    bt.사냥123 = 입력값.nextInt();  //계속여기로 오게되네
                    //1.편의점(오좀) 2.철물점(짜좀) 3.학교(먹좀)

                    int 속도 = 250;  //수정하기 귀찮아서

                    // 좀비값을 각각 넣어줌. 중복 제거.
                    if (bt.사냥123 == 1) {

                        좀비값 = 오렌지좀비값;
                        System.out.println("\n\n\n\n\n\n\n");
                        System.out.println("15미터 앞 편의점으로 갑니다...");
                        System.out.println("(뒤적뒤적)");
                        생명체값.멘트sleep_짧(속도,"어디 쓸만한게 있나",".",".",".",".");
                        생명체값.멘트sleep_짧(속도,".",".",".",".","");

                        System.out.println("\n\n\n\n\n\n\n\n");


                    } else if (bt.사냥123 == 2) {

                        좀비값 = 짜장면좀비값;
                        System.out.println("\n\n\n\n\n\n\n");
                        System.out.println("50미터 앞 초등학교로 갑니다...");
                        System.out.println("(뒤적뒤적)");
                        생명체값.멘트sleep_짧(속도,"어디 쓸만한게 있나",".",".",".",".");
                        생명체값.멘트sleep_짧(속도,".",".",".",".","");

                        System.out.println("\n\n\n\n\n\n\n\n");


                    } else if (bt.사냥123 == 3) {

                        좀비값 = 먹물파스타좀비값;
                        System.out.println("\n\n\n\n\n\n\n");
                        System.out.println("200미터 앞 철물점으로 갑니다...");
                        System.out.println("(뒤적뒤적)");
                        생명체값.멘트sleep_짧(속도,"어디 쓸만한게 있나",".",".",".",".");
                        생명체값.멘트sleep_짧(속도,".",".",".",".","");

                        System.out.println("\n\n\n\n\n\n\n\n");

                        //123이외 입력시
                    } else if (bt.사냥123 == 0) {
                        break;
                    }  //0.이전

                    else {
                        System.out.println("다시 선택하세요.");
                    }


                    //크아앙
                    Runnable music좀비 = new 좀비등장(bt);
                    Thread 좀비등장t = new Thread(music좀비);
                    bt.좀비등장onOff = true;
                    좀비등장t.start();
                    //얘는 내가 만든 스레드로 재생함. 원할 때 정지하는 기능을 만들기 어려워서 그냥 슬립이 끝나면 탈출하게끔 만듦. 정밀x


                    System.out.println(
                            "                                                    " +
                                    "╔════════════════════════════╗\n\n" +
                                    "                                                                 " + "(̮̮̃•̮̮̃̃•̃)." +
                                    ".\n" +
                                    "                                                                 /█l" +
                                    " \n" +
                                    "                                                                 / " +
                                    "L\n");

                    System.out.println("                                                        " + 좀비값.이름 + "가 " +
                            "나타났다!");
                    System.out.println();
                    좀비값.좀비스펙(좀비값);

                    System.out.println("                                                    " +
                            "╚════════════════════════════╝");

                    System.out.println("                                                                   1.싸운다  0" +
                            ".도망");

                    while (true) {  //좀비만나고 1.싸움 0.도망

                        bt.싸움_도망 = 입력값.nextInt();


                        //음악 스레드 정지
/*                        Runnable music배경_끝 = new 배경(bt);
                        Thread 배경t_끝 = new Thread(music배경_끝);*/

                        bt.좀비등장onOff = false;

                        mp.stop();
                        mp.next();


                        if (bt.싸움_도망 == 1) {



                            //음악스레드
/*                            Runnable music전투 = new 전투(bt);
                            Thread 전투t = new Thread(music전투);

                            //배경음악 끄고 전투음악 재생
                            bt.배경onOff = false;

                            bt.전투onOff = true;
                            전투t.start();*/


                            생존자값.전투fight();

                            System.out.println("\n\n\n\n\n\n                            좀비가 달려오고있습니다. 공격하세요! \n\n\n\n\n\n");

                            System.out.println("1.공격  2.변신 공격  3.회복약");


                            //반복문 들어가기 전에 입장하자마자 좀비값 초기화 ---------------------------------------------------
                            오렌지좀비값 = new 좀비(
                                    "오렌지좀비", bt.당신이름, "오렌지맛 산성 뱉기",
                                    "카악 퉤~~!!!", 1, 100,
                                    1000, 1000, 생존자값.공격력,
                                    8000, 600);

                            짜장면좀비값 = new 좀비(
                                    "짜장면좀비", bt.당신이름, "면발로 때리기", "후루루룩~~!!",
                                    2, 120,
                                    1200, 1200,
                                    생존자값.공격력, 8000, 700);

                            먹물파스타좀비값 = new 좀비(
                                    "먹물파스타좀비", bt.당신이름, "눈에 먹물 뿌리기", "먹물 받아랏. 찍~~!!",
                                    3, 150,
                                    1500, 1500,
                                    생존자값.공격력, 8000, 800);

                            //--------------------------------------------------------------------------------------------


/*
                            System.out.println("오좀체력" + 좀비값.남은체력);
*/


                            //-------------------------- 좀비 스레드 -------------------------------
                            Runnable r = new 좀비스레드2(생존자값, 좀비값, 퍽퍽, bt, 오좀, 먹좀);
                            //빵꾸 2개 뚫었더니 main에서 선언한 객체값 가져옴!!! 야호
                            Thread t = new Thread(r);

                            t.start();

                            //----------------------------------------------------------------


                            // 생존자 죽고나서 1스캐너 값 받으면 공격하고 탈출해서 if를 한 번 더씀
/*
                            if (좀비값.남은체력 > 0 && 생존자값.남은체력 > 0) {
*/

                                while (좀비값.남은체력 > 0 && 생존자값.남은체력 > 0) {


                                    // ------------------------------- 1.일반공격 -----------------------------------


                                    //좀비 체력이 반 이하일 때 나는 2초간 못 움직임.
                                    //스캐너 값 받기전인 여기에 위치해 보자.
                                    //체력을 기준으로하는게 아니라 좀비가 스킬쓰면 아래가 실행되도록 할까.

                                    /*if (bt.사냥123 == 1) {

                                    } else if (bt.사냥123 == 2) {

                                    } else if (bt.사냥123 == 3)*/ {

/*                                        System.out.println("[" + bt.당신이름 + "]은 먹물때문에 눈이 멀어서 3초간 공격을 못한다.");
                                        Thread.sleep(2000);*/

                                    }

                                    if (생존자값.남은체력 > 0) {  //내가 죽었을 때 빠져나오게 하기 위해서 추가한 코드

                                        bt.사냥 = 입력값.nextInt();  //내가 죽으면 여기에 머물러있구나

                                    } else {  //내 체력 0이라면

                                        break;
                                    }


                                    //1.공격  2.변신 공격  3.회복약


                                    //-------------------- 공격 선택 & 공격 ---------------------------

                                    if (bt.사냥 == 1) {  //1.공격



                                        if (생존자값.남은체력 <= 0) {  //lose면 탈출

                                            System.out.println("\n\n\n\n\n\n");생명체값.멘트sleep_짧(500, "                                 안전지대로 이동합니다", ".", ".", ".", ".");
                                            System.out.println("\n\n");
                                            mp.stop();
                                            mp.previous();

                                            생존자값.공격력 = bt.생공격력초기화;  //아이템쓰고나서 900으로 남은 문제 해결하기 위해 쓴 코드.
                                            생존자값.남은체력 = 1;
                                            bt.num = "99";  //lose다음 안전지대로 이동한다는 문구 뜬 다음에도 win이 떠서 추가한 코드

                                            break;
                                        }

                                        생존자값.공격력 = bt.생공격력초기화;  //공격력 초기화

/*                                        if (bt.공격실패 = true) {  //먹물공격 당했을 때 저 이미지가 안 나왔으면 좋겠음(어지러워서) >> 구현ok
                                            //nothing
                                        } else {

                                            생존자값.공격();      // >>>공격(이미지만)

                                        }*/


                                    } else if (bt.사냥 == 2) {  //2.변신공격

                                        if (생존자값.남은체력 <= 0) {
                                            break;
                                        }
                                        System.out.println("          ╚═╔════════════════════════╗");
                                                                            오렌지살점.스킬_살점(오렌지살점);
                                                                            짜장면살점.스킬_살점(짜장면살점);
                                                                            먹물살점.스킬_살점(먹물살점);
                                        System.out.println("            ╚════════════════════════╝\n\n\n\n\n");


                                        //아이템 선택하기 누르면 좀비가 2초정도는 멈춰줬으면 좋겠어. (구현)

                                        생존자값.공격력 = bt.생공격력초기화 * 3;  //공격력의 3배

                                        bt.아이템공격 = 입력값.nextInt();
                                        //1.오렌지살점 2.짜장면살점 3.먹물살점

                                        if (bt.아이템공격 == 1) {

                                            오렌지좀비값.아이템변신(오렌지좀비값); //>>> 뾰로롱
                                            오렌지살점.갯수 -= 1;

                                        } else if (bt.아이템공격 == 2) {

                                            짜장면좀비값.아이템변신(짜장면좀비값); //>>> 뾰로롱
                                            짜장면살점.갯수 -= 1;

                                        } else if (bt.아이템공격 == 3) {

                                            먹물파스타좀비값.아이템변신(먹물파스타좀비값); //>>> 뾰로롱
                                            먹물살점.갯수 -= 1;

                                        }
                                        // 이제 여기다가 스캐너 값 받아서 살점 사용하면 살점 갯수
                                        // 소진되게 만들기


                                        // ~아이템공격

                                        //아이템 물약 사용
                                    } else if (bt.사냥 == 3) {  //3.회복약

                                        아이템들.물약최종(피물약1, 피물약2, 생존자값, bt);
                                        continue;

                                    } else if (bt.사냥 == 44) {


                                        System.out.println("회복을 원하시나요?");
                                        System.out.println("무료 회복 : \"치료가필요해\"라고 입력하세요.");
                                        System.out.println("유료 회복 : 1을 누르세요( 3만원 )\n");
                                        //가독성위해 \n

                                        System.out.println("회복없이 돌아가려면 아무키나 입력하세요.");

;


                                        Scanner 입력 = new Scanner(System.in);
                                        bt.사망후생존자체력 = 입력.nextLine();
                                        System.out.println("\n\n\n");


                                        if (bt.사망후생존자체력.equals(bt.num)) {

                                            생존자값.남은체력 = 생존자값.기존체력;  //풀피만들기
                                            생존자값.소지골드 -= 30000;

                                            System.out.println("\n\n\n\n\n\n\n\n");
                                            System.out.println("돈이 3만골드 차감됩니다. ");
                                            System.out.println("소지금 : " + 생존자값.소지골드 + "골드");
                                            System.out.println("생존자의 남은체력 : " + 생존자값.남은체력 + "/" + 생존자값.기존체력);
                                            System.out.println("\n\n\n\n\n\n\n\n");

                                            mp.next();
                                            /*System.out.println("안전지대로 돌아갑니다..\n\n\n");*/
                                            System.out.println("\n\n\n\n\n\n");
                                            생명체값.멘트sleep_짧(500, "                                 안전지대로 이동합니다", ".", ".", ".", ".");
                                            System.out.println("\n\n\n\n\n\n\n\n");

                                            bt.num = "99";  //다른 아무 값으로 넣기. 계속 1인 경우로 만들기 싫어서.

                                            break;

                                        } else if (bt.사망후생존자체력.equals(bt.str)) {

                                            생존자값.남은체력 = 생존자값.기존체력;  //풀피만들기
                                            System.out.println("\n\n\n\n\n\n\n\n");
                                            System.out.println("무료로 체력이 회복되었습니다.");
                                            System.out.println("생존자의 남은체력 : " + 생존자값.남은체력 + "/" + 생존자값.기존체력);
                                            System.out.println("\n\n\n\n\n\n\n\n");
                                            생명체값.멘트sleep_짧(500, "                                 안전지대로 이동합니다", ".", ".", ".", ".");
                                            System.out.println("\n\n\n\n\n\n\n\n");

                                            mp.next();

                                            bt.str = "패스"; //다른 아무 값으로 넣기. >>패스일 때 탈출
                                            break;

                                        } else {

                                            생존자값.남은체력 =1;
                                            생명체값.멘트sleep_짧(500, "                                 다친 몸을 이끌고 돌아갑니다", ".", ".", ".", ".\n\n\n");

                                            mp.next();
                                            bt.str = "패스"; //다른 아무 값으로 넣기. >>패스일 때 탈출

                                            break;

                                        }


                                    } else if (bt.사냥 == 00) {
                                        System.out.println("게임을 완전히 종료합니다.");
                                        System.exit(0);
                                    }

                                    System.out.println("$$");



                            //-------------------------------------------------------------


                            //생존자 죽고나서 한 번 더 공격하는 문제 :
                            if (좀비값.남은체력 <= 0 || 생존자값.남은체력 <= 0) {

/*
                                        System.out.println("1111좀비 또는 생존자 체력 0 됨");
*/
                                continue;
                            }



                            //-------------------------- 공격 결과 -----------------------------------



                            생존자값.공격_결과(좀비값, 퍽퍽, bt, 짜좀, 생존자값);         //               우어억(메소드)

                            Thread.sleep(300);  //보기 좋으라고


                            if (좀비값.남은체력 > 0) {

                                System.out.println("1.공격  2.변신 공격  3.회복약 ## \n\n\n\n");
                            }


                                }  //~ while 전투끝



                            // ---------------- 전투 종료 --------------------------------------
/*
                            System.out.println("전투 while빠져나옴");
*/


                            if (bt.num == "99" || bt.str == "패스") {  //while탈출하려고 추가한 코드

                                bt.str = "ㅇ";  //초기화
                                bt.num = "1";
                                                                                       // lose일 때 마을로 이동한다면서 win이
                                                                                        // 나오는 문제가
                                                                                        // 있었음.
                                break;

                            }
                            //전투가 끝난 뒤 생존자가 살아있다면 보상받기
                            if (생존자값.남은체력 > 0) {

                                Thread.sleep(1000);

                                생존자값.승리win();
                                Thread.sleep(1000);

                                생존자값.보상한번에(좀비값, bt, 생존자값);

                                오렌지살점.보상_살점(좀비값);

                                좀비값.사망_보상_출력(좀비값);


                                //추가 아이템 획득 : 랜덤으로 낮은확률로 득템.

                                부품1.랜덤부품(부품1, 부품2, 부품3);




                                Thread.sleep(2000);

                                System.out.println("\n\n\n\n\n\n");생명체값.멘트sleep_짧(500, "                                 안전지대로 이동합니다", ".", ".", ".", ".");
                                System.out.println("\n\n");
                                mp.stop();
                                mp.previous();

                                생존자값.공격력 = bt.생공격력초기화;  //아이템쓰고나서 900으로 남은 문제 해결하기 위해 쓴 코드.

                            }

                            break;


                        } //~ bt.싸움_도망 == 1

                        else if (bt.싸움_도망 == 0) {
                            System.out.println("\n\n\n\n\n\n");
                            System.out.println("                             좀비에게 들키지 않고 살금살금 도망갑니다.\n\n\n");  //확률로 해도 재밌겠다.
                            mp.next();
                        }

                        break;

                    }// ~while 좀비만나고 1.싸움 0.도망



                    break;

                }  // ~while 장소123
            }

                // 2. 상태확인
            else if (당신의선택 == 2) {

                    생존자값.스탯창(bt.당신이름);

                    // 3. 지하 전당포
                } else if (당신의선택 == 3) {


                while (true) {

                    System.out.println("[ " + bt.당신이름 + " ] 님이 지하 전당포에 입장합니다 (0.이전)\n");
                    System.out.println("1.구매  2.판매  3.조합하기\n");
                    int 당신의선택_상점123 = 입력값.nextInt();


                    // 1.구매 선택
                    if (당신의선택_상점123 == 1) {

                        while (true) {


                            System.out.println("\n\n\n\n" +
                                             "===========  지하 전당포  ===========\n");
                          System.out.println(" ─────────────< 부품 >─────────────\n");

                            System.out.print("  1.");아이템들.전당포_구매(부품1);
                            System.out.print("  2.");아이템들.전당포_구매(부품2);
                            System.out.print("  3.");아이템들.전당포_구매(부품3);
                            System.out.println();
                          System.out.println(" ─────────────<  피  >─────────────\n");
                            System.out.print("  4.");아이템들.전당포_구매(피물약1);
                            System.out.print("  5.");아이템들.전당포_구매(피물약2);
                            System.out.println();
                          System.out.println("===================================");


            System.out.println("                                                   ╭───────────── 내 배낭 ────────────╮\n");

            System.out.println("                                                      ───────────< 부품 >───────────\n");

                                                                                    아이템들.배낭_구매(부품1);
                                                                                    아이템들.배낭_구매(부품2);
                                                                                    아이템들.배낭_구매(부품3);
            System.out.println();
            System.out.println("                                                      ───────────< 살점 >───────────\n");
                                                                                    아이템들.배낭_구매(피물약1);
                                                                                    아이템들.배낭_구매(피물약2);
            System.out.println();
                                                                                   생존자값.소지골드(생존자값.소지골드);
            System.out.println("                                                   ╰─────────────────────────────────╯\n\n\n");


            System.out.println("                             구매할 아이템 번호를 입력하세요 (0.이전)\n");








                            int 당신의선택_상점_구매 = 입력값.nextInt();

                            // 사용자 입력
                            // 아이템 구매 선택
                            // 1:배터리
                            if (당신의선택_상점_구매 == 1) {

                                아이템들.구매_선택(부품1,생존자값);

                            // 2:통신기구
                            } else if (당신의선택_상점_구매 == 2) {

                                아이템들.구매_선택(부품2,생존자값);

                            // 3:마이크
                            } else if (당신의선택_상점_구매 == 3) {

                                아이템들.구매_선택(부품3,생존자값);

                            } else if (당신의선택_상점_구매 == 4) {

                                아이템들.구매_선택(피물약1,생존자값);

                            } else if (당신의선택_상점_구매 == 5) {

                                아이템들.구매_선택(피물약2,생존자값);
                            }
                            else if (당신의선택_상점_구매 == 0) {
                                System.out.println("*");
                                break;
                            }


                        }  //~while 빠져나오면 부품가격갯수 보여줌
                    }


                    // 2.판매
                    else if (당신의선택_상점123 == 2) {

                        while (true) {


                            //내 내 배낭 진열 쭉하고 판매메소드 이용하여 지하 전당포에 판매해서 골드 얻기
                            // 갯수가 1이상일 때만 출력

                            System.out.println("\n\n\n\n" +
                                               "=========  지하 전당포  =========\n");

                            System.out.println("  제길.. 이 더러운 좀비들..");
                            System.out.println("  아 어서오게나");
                            System.out.println("  팔거면 쓸모있는 걸 팔길 바라네\n");

                            System.out.println("===============================");
            System.out.println("                                               ╭──────────────── 내 배낭 ───────────────╮\n");

            System.out.println("                                                 ───────────────< 부품 >───────────────\n");

                                                                                        아이템들.배낭_소유부품_숫자(부품1);
                                                                                        아이템들.배낭_소유부품_숫자(부품2);
                                                                                        아이템들.배낭_소유부품_숫자(부품3);
            System.out.println("                                                 ───────────────<  피  >───────────────\n");

                                                                                        아이템들.배낭_소유부품_숫자(피물약1);
                                                                                        아이템들.배낭_소유부품_숫자(피물약2);
            System.out.println();
                                                                 생존자값.소지골드(생존자값.소지골드);
            System.out.println("                                               ╰───────────────────────────────────────╯\n\n\n");

            System.out.println("                             판매할 아이템 번호를 입력하세요 (0.이전)\n");


                            int 판매 = 입력값.nextInt();  //값입력


                            // 판매 선택 (1이상의 아이템)
                            if (판매 == 1) {

                                아이템들.판매_선택(부품1, 생존자값);

                            } else if (판매 == 2) {

                                아이템들.판매_선택(부품2, 생존자값);

                            } else if (판매 == 3) {

                                아이템들.판매_선택(부품3, 생존자값);

                            }  else if (판매 == 4) {

                                아이템들.판매_선택(피물약1, 생존자값);

                            }  else if (판매 == 5) {

                                아이템들.판매_선택(피물약2, 생존자값);

                            }  else if (판매 == 0) {
                                System.out.println("$$");

                                break;
                            }



                        }  //~while








                    // 3. 조합요청
                    } else if (당신의선택_상점123 == 3) {

                        System.out.println("통신장치를 조합해드립니다.\n");
                        System.out.println("1.Yes  2.No");

                        int 조합 = 입력값.nextInt();  //입력값 : 문자 y or Y

                        if (조합 == 1) {

                            System.out.println("조합중입니다...\n");

                            // 해피엔딩
                            if (부품1.갯수 >= 부품1.설계갯수 && 부품2.갯수 >= 부품2.설계갯수 && 부품3.갯수 >= 부품3.설계갯수) {

                                System.out.println("뚝딱뚝딱");
                                System.out.println("뚝딱뚝딱");
                                System.out.println("뚝딱뚝딱");
                                System.out.println("**********   작동하는 무전기가 제작되었습니다.  **********");
                                System.out.println("**********   작동하는 무전기가 제작되었습니다.  **********");
                                System.out.println("**********   작동하는 무전기가 제작되었습니다.  **********");
                                System.out.println("**********   UN군 Jamie사령과 연락이 닿습니다. **********\n\n\n");
                                System.out.println( "   ▬▬▬.◙.▬▬▬ \n" +
                                                    "   ═▂▄▄▓▄▄▂ \n" +
                                                    "   ◢◤ █▀▀████▄▄▄▄◢◤ \n" +
                                                    "   █▄ █ █▄ ███▀▀▀▀▀▀▀╬ \n" +
                                                    "   ◥█████◤ \n" +
                                                    "   ══╩══╩═ \n" +
                                                    "   ╬═╬ \n" +
                                                    "   ╬═╬ \n" +
                                                    "   ╬═╬ \n" +
                                                    "   ╬═╬ \n" +
                                                    "   ╬═╬☻/\n" +
                                                    "   ╬═╬/▌\n" +
                                                    "   ╬═╬//\n\n\n");

                                System.out.println("**********                                 **********");
                                System.out.println("**********            피신 성공             **********");
                                System.out.println("**********             E N D               **********");
                                System.out.println("**********                                 **********\n\n\n");


                                System.out.println("계속 하시려면 1번, 게임을 종료하시려면 0번을 누르세요.");
                                int 게임종료 = 입력값.nextInt();

                                if (게임종료 == 1) {
                                    // 반복문 계속
                                } else if (게임종료 == 0){
                                    System.out.println("게임을 종료합니다.");
                                    System.exit(0);


                                }


                                break;

                            } else {

                                System.out.println("부품 갯수가 부족합니다.\n");
                                System.out.println("╔═══════════════════════════════╗\n");

                                System.out.println("     < 통신장치 조합 설계도 >\n");
                                                        부품값.설계도(부품1);
                                                        부품값.설계도(부품2);
                                                        부품값.설계도(부품3);

                                System.out.println("\n╚═══════════════════════════════╝\n\n\n");
                                // 부품조합설계도 : 부품모아

                            }
                        }





                    // 0. 이전
                    } else if (당신의선택_상점123 == 0) {
                       //탈출
                        break;
                        // 123 이외 입력시 반복문 탈출못함(break못씀)
                    } else {
                        System.out.println("다시 선택하세요.");
                    }


                }//~while  빠져나오면 1.구입  2.판매  3.조합하기 나옴


            // 4. 내 배낭
            } else if (당신의선택 == 4) {

                while (true) {

                    System.out.println("\n\n\n\n"); //보기이쁘라고.
                    System.out.println("╭────────────  내 배낭  ────────────╮\n"); // 갯수가 1이상일 때만 출력

                    System.out.println("   ───────────< 부품 >───────────\n");

                                        아이템들.내배낭(부품1);
                                        아이템들.내배낭(부품2);
                                        아이템들.내배낭(부품3);
                    System.out.println();
                    System.out.println("   ───────────< 살점 >───────────\n");

                                        아이템들.배낭오픈(오렌지살점);
                                        아이템들.배낭오픈(짜장면살점);
                                        아이템들.배낭오픈(먹물살점);
                    System.out.println();
                    System.out.println("   ───────────<  피  >───────────\n");

                                        아이템들.내배낭(피물약1);
                                        아이템들.내배낭(피물약2);
                    System.out.println();
                                        생존자값.소지골드_왼쪽(생존자값.소지골드);

                    System.out.println("╰─────────────────────────────────╯");

                    System.out.println("[ "+bt.당신이름+" ]님의 남은 체력 : "+ 생존자값.남은체력+"/"+생존자값.기존체력);


                    System.out.println("\n\n\n좀비의 피를 마시려면 선택하세요(0.이전)\n");
                    System.out.println("1.좀비의 피(+체력" + 피물약1.체력증가 + ")");
                    System.out.println("2.농후한 좀비의 피(+체력" + 피물약2.체력증가 + ")\n");


                    // 스캐너 : 체력회복 아이템 사용할꺼야?
                    int 좀비피사용 = 입력값.nextInt();

                    if (좀비피사용 == 1) {

                        피물약값.피섭취(피물약1, 생존자값, bt);

                    } else if (좀비피사용 == 2) {

                        피물약값.피섭취(피물약2, 생존자값, bt);

                    } else if (좀비피사용 == 0) {
                        break; //탈출성공
                    }

                }


                // 5. 부품조합설계도
            } else if (당신의선택 == 5) {

                System.out.println("╔═══════════════════════════════╗\n");

                System.out.println("     < 통신장치 조합 설계도 >\n");
                                        부품값.설계도(부품1);
                                        부품값.설계도(부품2);
                                        부품값.설계도(부품3);
                System.out.println();
                System.out.println("  Tip : 설계도의 부품을 모아오면");
                System.out.println("        전당포에서 조합 가능합니다.");
                System.out.println("\n" +
                                   "╚═══════════════════════════════╝");
                // 부품조합설계도 : 부품모아

                System.out.println("                         (0.이전)");

                int 부품조합설계도이전 = 입력값.nextInt();

                if (부품조합설계도이전 == 0) {

                } else {
                    System.out.println("다시 선택하세요.");
                }

            } else if (당신의선택 == 6) {

                System.out.println("╔════════════════════════════════════════════════════════════════════════════╗");
                System.out.println("\n");

                System.out.println("  <스토리>");
                System.out.println("  20xx년도 한국, 좀비바이러스가 창궐했습니다.");
                System.out.println("  원인은 방사능으로 알려져있습니다.");
                System.out.println("  [ "+bt.당신이름+" ] 님은 생존자들의 임시 아지트에 열흘 간 숨어지내고 있었습니다.");
                System.out.println("  인간의 문명이 아예 망가지진 않아서 다행이지만, 이곳에도 언제 좀비떼가 들이닥칠지 모릅니다.");
                System.out.println("  어느 날 아지트 내에서 UN군이 한국 어느 항구에 상륙한다는 소문을 듣게 됩니다.");
                System.out.println("  UN군이 언제, 어디서 구하러 오는지 알 수 없으니 직접 연락할 방법을 찾아봅시다.");
                System.out.println("  참고로 방사능에 오염된 1좀비라서 그 좀비의 살점을 먹으면 잠깐 인간도 강해집니다.\n\n");


                System.out.println("  <Tip>");
                System.out.println("  * 설계도의 부품을 모아오면 전당포에서 조합 가능합니다.");
                System.out.println("  * 좀비의 피를 마시면 체력이 기하급수적으로 회복됩니다. ");
                System.out.println("  * 좀비의 살점을 먹으면 전투 시 좀비로 변신가능합니다. \n\n");


                System.out.println("  <소리>");
                System.out.println("  * 배경음악을 멈추려면 'off'라고 입력하세요.");
                System.out.println("  * 배경음악을 다시 키려면 'on'이라고 입력하세요. \n");

                System.out.println("╚════════════════════════════════════════════════════════════════════════════╝");
                System.out.println("                                                                      (0.이전)");


                while (true) {

                    String 이전 = 입력값.next();   //값받음

                    if (이전.equals("0")) {

                        break;

                    } else if (이전.equals("off")) {

                        mp.stop();

                    } else if (이전.equals("on")) {

                        mp.play();

                    } else {

                        System.out.println("다시 입력하세요.");

                    }
                }

            }

            else {
                System.out.println("다시 선택하세요.");
                System.out.println("1.좀비사냥\n2.상태확인\n3.지하 전당포\n4.배낭");
            } // 선택n 끝나면 12345선택지 나옴


            System.out.println("\n\n");
            System.out.println("1.좀비사냥\n2.상태확인\n3.지하 전당포\n4.배낭\n5.부품조합설계도\n6.스토리 및 도움말\n\n");


        }  //~while "1.사냥  2.상태확인  3.지하 전당포  4.내 배낭  5.부품조합설계도











        //필드
        //생성자
        //메소드

    }

}
