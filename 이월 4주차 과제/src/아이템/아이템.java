package 아이템;


import 생명체.생존자.생존자;
import 스레드.button;

import java.util.Scanner;

public class 아이템 {


    // ---------------------------- 필드 ----------------------------

    Scanner sc = new Scanner(System.in);
    public String 품명;
    public int 가격;
    public int 갯수;
    생존자 생;
    button bt;

/*
    public 살점 살점값;
*/
    public String 넘버;

    /*int 공격력증가; : 무기
    int 남은체력증가; : 방어
    int 기존체력증가; : 물약 */



    // ----------------------- 생성자 --------------------------

    // 디폴트 생성자 추가 : 다른 생성자 전부 안 끌고와도 됨
    // 2차상속시 어머니클래스가 디폴트 생성자 만들어야 하위클래스도 디폴트 생성자 추가 가능

    public 아이템(){

    };

    public 아이템(생존자 생){

        this.생 = 생;
    };

    public 아이템(String 품명, int 가격, int 갯수, String 넘버) {

        this.품명 = 품명;
        this.가격 = 가격;
        this.갯수 = 갯수;
        this.넘버 = 넘버;


    }


    // -------------------------- 메소드 ----------------------------



    // --------------------------------------------------- 전당포 입장 -----------------------------------------------
    //------------------------------------------- 구매 -----------------------------------------

    //---------------------- 구매) 전당포 출력 -----------------------------
    public void 소지금감소(아이템 a, 생존자 생) {

        소지금감소(a.가격, 생.소지골드);
        생.소지골드 = 소지금감소(a.가격, 생.소지골드);
    }


    // 부품 갯수 1씩 증가
    public void 갯수증가(아이템 a) {

        a.갯수 = a.아이템1증가(a.갯수);
    }


    public void 구매_선택(아이템 b, 생존자 생) {

        if (b.가격 > 생.소지골드) {
            System.out.println("\n\n                                소지골드가 부족합니다.");
        } else {

            System.out.println("\n\n                             [" + b.품명 + "] 를 구매했습니다.");
            System.out.println("                              - " + b.가격 + "골드 차감됩니다.");
/*
            System.out.println("현재 소지골드 : "+생.소지골드);
*/
            소지금감소(b, 생);
            갯수증가(b);

        }
    }




    // 전당포 - 구매 : 전당포 물품 설명 : 2가지
    public void 전당포_설명(String 템명, int 가격) {

        System.out.println(템명 + "("+가격+"골드)");
    }


    //지하 전당포_구매 값 넣기
    //이건 상속 못하나?? abstract이용해서 추상메소드로 만들어서 상속한다음에 부품같은 하위클래스에서
    // 이용하면 되는거아냐? 근데 main에서 이상해져.. 그냥 여기 냅두고 상속안하는대신 복붙하면 되지
    // 않을까?
    public void 전당포_구매(아이템 a){  //변수명 아무거나 해도되서 간단하게 a라고 지음. 길어지기 싫어서.

        전당포_설명(a.품명, a.가격);
    }



    // 전당포 - 구매 : 내 배낭 물품 설명 : 3가지
/*    public void 배낭_설명_별(String 템명, int 가격, int 갯수) {

        System.out.println("* "+템명 + "\n"
                + "                                 가격 : " + 가격 + "골드\n"
                + "                                 갯수 : " + 갯수 + "개\n");
    }*/





    //지하 전당포_구매 값 넣기
    public void 배낭_구매(아이템 b) {   //마찬가지로 길어지기 싫어서 b로 지음

        if (b.갯수 > 0) {

            System.out.print("                                                    "); 배낭오픈_별(b.품명, b.갯수, b.가격);

        }


    }

    //--------------------------------------- 판매 --------------------------------------------
    //----------------------- 판매) 전당포 출력 -----------------------------



    public void 판매_선택(아이템 a, 생존자 생) {

        if (a.갯수 <= 0) {

            System.out.println("\n\n                              판매할 부품이 부족합니다.");

        } else {

            System.out.println("\n\n\n\n\n\n                             [" + a.품명 + "] 를 판매했습니다.");
            System.out.println("                             + " + a.가격 + "골드 획득합니다.");
            소지금증가(a, 생);
            갯수감소(a);

        }
    }

    public void 소지금증가(아이템 a, 생존자 생) {

        소지금증가(a.가격, 생.소지골드);
        생.소지골드 = 소지금증가(a.가격, 생.소지골드);
    }


    // 부품 갯수 1씩 증가
    public void 갯수감소(아이템 a) {

        a.갯수 = a.아이템1감소(a.갯수);
    }



    //------------------------ 판매) 내배낭 출력 ------------------------------

    //템명 앞에 숫자붙일 수 있음
    public void 배낭_판매_숫자(String 템명, int 가격, int 갯수, String 넘버) {

        System.out.println(넘버 + 템명 + "("+갯수+"개/ "+가격+"골드)\n");

    }


    //지하 전당포_구매 값 넣기
    public void 배낭_판매(아이템 a) {

        배낭_판매_숫자(a.품명, a.가격, a.갯수, a.넘버);
    }


    //지하 전당포_판매(인벤)
/*    public void 배낭_소유부품_별(아이템 b) {
        if (갯수 > 0) {

            System.out.print("                       "); 배낭_구매(b);

        }
    }*/


    //지하 전당포_판매(인벤)  //최종
    public void 배낭_소유부품_숫자(아이템 a) {

        if (a.갯수 > 0) {

            System.out.print("                                                  "); 배낭_판매(a);

        }
    }




    //--------------------------------------- 내 배낭 열어보기 -------------------------------------------


    //----------------------- 부품------------------------------

    //템명 앞에 숫자붙일 수 있음
    //아이템클래스를 상속했더라도 이 형태는 없어서 새로 메소드 만듦.
    public void 배낭오픈_별(String 템명, int 갯수, int 가격) {

        System.out.println("   * " + 템명 + "("+갯수+"개)");

    }

    public void 전투물약(String 템명, int 갯수, int 넘버) {

        System.out.println(넘버+템명 + "("+갯수+"개)");

    }


    //최종출력
    // main에서 간편하게 부르려고 이렇게 만듦
    public void 내배낭(아이템 c) {

        if (c.갯수 > 0) {

            배낭오픈_별(c.품명, c.갯수, c.가격);
        }
    }


    //-------------------------- 살점 ---------------------------
    public void 배낭오픈_아이템(String 템명, int 갯수) {

        System.out.println("   * " + 템명 + "("+갯수+"개)");
    }


    //지하 전당포_구매 값 넣기//최종
    public void 배낭오픈(아이템 a) {

        if (a.갯수 > 0) {

            배낭오픈_아이템(a.품명, a.갯수);
        }
    }


//------------------------------ 피 -------------------------------

    public void 전투물약(String 템명, int 갯수, String 넘버) {

        System.out.println(넘버+템명 + "("+갯수+"개)");

    }


    //최종출력
    // main에서 간편하게 부르려고 이렇게 만듦
    public void 물약사용(물약 c, 생존자 생) {

        if (c.갯수 > 0) {

            전투물약(c.품명, c.갯수, c.넘버);


        }
    }


    public void 물약최종(물약 a1, 물약 a2, 생존자 생, button bt) {

        System.out.println("                       ╚═╔══════════════════════╗");
        System.out.print(  "                           ");물약사용(a1, 생);
        System.out.print(  "                           ");물약사용(a2, 생);
        System.out.println("                         ╚════════════════════" +
                "══╝\n\n\n\n\n");


/*
        while (true) {
*/
            bt.어떤물약 = sc.nextInt();

            if (bt.어떤물약 == 4) {

                a1.갯수 -= 1;
                생.남은체력 = 생.남은체력 + a1.체력증가;

                if (생.남은체력>생.기존체력) { //남은체력이 기존체력을 초과하는 것 방지

                    생.남은체력 = 생.기존체력;
                }

                //출력
                System.out.println("\n\n\n\n");
                System.out.println("                        [ " + a1.품명 + " ]를 마셨다.(+"+a1.체력증가+" -> "+생.남은체력+"/"+생.기존체력+
                        ")" +
                                "\n\n\n\n\n");
                System.out.println("1.공격  2.변신 공격  3.회복약\n\n\n\n\n");  //위아래 빈칸 수 동일하게하려고 5줄띄움

            } else if (bt.어떤물약 == 5) {

                a2.갯수 -= 1;
                생.남은체력 = 생.남은체력 + a2.체력증가;
                //출력
                System.out.println("\n\n\n\n");
                System.out.println("                        [ " + a2.품명 + " ]를 마셨다.(+"+a2.체력증가+" -> "+생.남은체력+"/"+생.기존체력+
                        ")" +
                        "\n\n\n\n\n");                System.out.println("1.공격  2.변신 공격  3.회복약\n\n\n\n\n");

            } else {

                System.out.println("다시 입력하세요");

        }
    }







    //---------------- 사칙연산 ---------------------------

    public int 소지금감소( int 가격, int 소지골드) {

        return 소지골드 - 가격;
    }

    public int 소지금증가( int 가격, int 소지골드) {

        return 소지골드 + 가격;
    }



    public int 아이템1증가(int 갯수) {

        return 갯수+1;
    }

    public int 아이템1감소(int 갯수) {

        return 갯수-1;
    }


    // ---------------------------- 소지금 -------------------------------------
    // 현재 소지금

    public void 소지골드(int 소지골드) {


        System.out.println("                         ╔══════════════════════╗\n" +
                "                                 현재 소지금      \n" +
                "                                  " + 소지골드 + "골드\n" +
                "                         ╚══════════════════════╝");
    }


    // 현재 소지금
    public void 소지골드_바짝(int 소지골드) {


        System.out.println(
                "   ╔══════════════════════╗\n" +
                        "           현재 소지금      \n" +
                        "            " + 소지골드 + "골드\n" +
                        "   ╚══════════════════════╝");
    }
















    public void 살점아이템 (String 템명 , int 갯수){

        System.out.println(템명+"("+갯수+"개)\n");
    }
   //스킬 쓸 때 살점 불러오기
    public void 스킬_살점(살점 살점값) {
/*        살점 오렌지살점 = new 살점();
        살점 짜장면살점 = new 살점();
        살점 먹물살점 = new 살점();*/

        if (살점값.갯수 > 0) {
            살점아이템(살점값.품명, 살점값.갯수);
        }
/*        if (짜장면살점.갯수 > 0) {
            살점아이템(짜장면살점.품명,짜장면살점.갯수);
        }
        if (먹물살점.갯수 > 0) {
            살점아이템(먹물살점.품명,먹물살점.갯수);
        }*/

    }

    public int 살점갯수감소(int 살점) {

        return 살점 - 1;
    }
















} //~class
