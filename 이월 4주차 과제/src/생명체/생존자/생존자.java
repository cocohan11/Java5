package 생명체.생존자;

import 생명체.생명체;
import 생명체.좀비.좀비;
import 아이템.부품.부품;
import 아이템.살점;

import java.util.Scanner;


public class 생존자 extends 생명체 {


    // 필드
    좀비 오렌지좀비값;
    public int 소지골드;
    public int 무찌른좀비수;
    생존자 생존자값;



    // 생성자
    public 생존자() {    // 디폴트생성자 직접 추가
        super();

        //세팅값은 main메소드의 while 앞에 넣기. 다시 초기화되버리니까.
        this.레벨 = 레벨;
        this.무찌른좀비수 = 무찌른좀비수;
        this.공격력 = 공격력;
        this.남은체력 = 남은체력;
        this.기존체력 = 기존체력;
        this.소지골드 = 소지골드;

    }

    public 생존자(String 이름, String 상대이름, int 레벨, int 공격력, int 남은체력, int 기존체력, int 데미지, int 소지골드, int 무찌른좀비수,
               int 경험치) {
        super(이름, 상대이름, 레벨, 공격력, 남은체력, 기존체력, 데미지, 경험치);

        // 상속 외 추가
        this.소지골드 = 소지골드;
        this.무찌른좀비수 = 무찌른좀비수;

    }


    // 메소드
    public void 반갑습니다(String 이름) {

        System.out.println("\n반갑습니다 [ " + 이름 + " ] 님.");

    }

    public void 스탯창(String 이름) {
        System.out.println("╔════════════════════════════════════════════════════════════════════════╗");
        System.out.println("                         [ " + 이름 + " ] 님의 상태창                           ");
        System.out.println("   Lv." + 레벨 + "   무찌른좀비수:" + 무찌른좀비수 + "   공격력:" + 공격력 + "   남은체력:" + 남은체력 + "/" + 기존체력 + "   소지골드:" + 소지골드);
        System.out.println("╚════════════════════════════════════════════════════════════════════════╝");

    }


    //-----------------------------전투---------------------------------
    //-----------------------------전투---------------------------------

    public void 공격(좀비 좀비) {

        System.out.println("o==[]::::::::::::::::>\n");

        System.out.println("[ " + 이름 + " ]의 일반 공격\n");

        System.out.println("o==[]::::::::::::::::>\n");


        System.out.println("좀비의 남은체력 : " + 좀비.남은체력);


    }

    public void 공격_결과(좀비 좀비) {

        좀비.남은체력 = 좀비.맞기(공격력);
        좀비.맞기_결과(공격력);  //우어억
        System.out.println("좀비의 남은체력 : " + 좀비.남은체력);

    }

    public int 체력(좀비 좀비) {
        return 좀비.체력(공격력);
    }


    public void 공격_결과_사망(좀비 좀비) {
        좀비.사망(공격력);
        System.out.println("좀비 남은체력 : "+좀비.남은체력);
        /*System.out.println("좀비의 남은체력 : " + 좀비.맞기(공격력));*/

    }


    public int 맞기(int 공격력) {

        return 남은체력 - 공격력;
    }


    public void 맞기_결과(좀비 좀비) {

        System.out.println("╔══════════════════════════╗");
        System.out.println("           [ " + 이름 + " ] \n");
        System.out.println("     ╭ ◜◝ ͡ ◜◝ ͡ ◜◝ ͡ ╮\n" +
                            "           윽...!\n" +
                            "..O°°╰ ◟◞ ͜ ◟◞ ͜ ◟◞ ͜ ╯\n");
        System.out.println("   " + 좀비.공격력 + " 의 데미지를 입었다.");
        System.out.println("   남은 체력 : " + 남은체력 + "/" + 기존체력);
        System.out.println("╚══════════════════════════╝\n");
        System.out.println("1.공격  2.아이템 공격");

/*
        System.out.println("1.공격  2.아이템 공격 (맞기결과)");
*/
    }




    //----------------------------- 아이템 공격 ---------------------------------

    public int 공격3배(int 공격력) {

        return 공격력 * 3;
    }

    public int 공격3배복구(int 공격력) {

        return 공격력 / 3;
    }

    public void 일반공격복구() {

        공격력 = 공격3배복구(공격력);

    }


    public void 아이템공격(좀비 좀비) {

        공격력 = 공격3배(공격력);

        System.out.println("생존자의 공격력 : " + 공격력);

        System.out.println("o==[]::::::::::::::::::>\n");

        System.out.println("[ " + 이름 + " ]의 아이템 공격\n");

        System.out.println("o==[]::::::::::::::::::>\n");


        System.out.println("좀비의 남은체력 : " + 좀비.맞기(공격력));


    }



    //----------------------- 사망 or 승리-------------------

    public void 패배lose() {
        System.out.println( "╔═════════════════════════════════════════════╗\n\n" +
                            "");
                    System.out.println("" +
                            "       ██╗      ██████╗ ███████╗███████╗\n" +
                            "       ██║     ██╔═══██╗██╔════╝██╔════╝\n" +
                            "       ██║     ██║   ██║███████╗█████╗  \n" +
                            "       ██║     ██║   ██║╚════██║██╔══╝  \n" +
                            "       ███████╗╚██████╔╝███████║███████╗\n" +
                            "       ╚══════╝ ╚═════╝ ╚══════╝╚══════╝\n" +
                            "");
        System.out.println( "╚════════════════════════════════════════════╝");
        System.out.println("가지고 있는 소지품을 다 잃었습니다.");
/*
        System.out.println("1계속 하시려면 1번, 게임을 종료하시려면 0번을 누르세요.");
*/



    }


    public void 승리win(){


        System.out.println( "╔═════════════════════════════════════════════╗\n\n" +

                "            ██╗    ██╗██╗███╗   ██╗\n" +
                "            ██║    ██║██║████╗  ██║\n" +
                "            ██║ █╗ ██║██║██╔██╗ ██║\n" +
                "            ██║███╗██║██║██║╚██╗██║\n" +
                "            ╚███╔███╔╝██║██║ ╚████║\n" +
                "             ╚══╝╚══╝ ╚═╝╚═╝  ╚═══╝\n\n" +
                "╚════════════════════════════════════════════╝");
        System.out.println( "                                       (0.이전)\n\n");

    }


    public void 전투fight() {
        System.out.println( "╔══════════════════════════════════════════════╗\n\n");
        System.out.println( "" +
                            "      ███████╗██╗ ██████╗ ██╗  ██╗████████╗\n" +
                            "      ██╔════╝██║██╔════╝ ██║  ██║╚══██╔══╝\n" +
                            "      █████╗  ██║██║  ███╗███████║   ██║   \n" +
                            "      ██╔══╝  ██║██║   ██║██╔══██║   ██║   \n" +
                            "      ██║     ██║╚██████╔╝██║  ██║   ██║   \n" +
                            "      ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝ \n");
        System.out.println( "╚═════════════════════════════════════════════╝");

    }



    // ------------------- 보상 ---------------------------------------------
    // ------------------- 보상 ---------------------------------------------

    public void 보상_골드(좀비 좀비) {

        좀비.보상_골드(소지골드);
        소지골드 = 좀비.보상_골드(소지골드);
    }

    public void 보상_경험치(좀비 좀비) {

        좀비.보상_경험치(경험치);
        경험치 = 좀비.보상_경험치(경험치);
    }

    public void 보상_무찌른좀비수(좀비 좀비) {

        좀비.좀비보상_무찌른좀비수(무찌른좀비수);
        무찌른좀비수 = 좀비.좀비보상_무찌른좀비수(무찌른좀비수);
    }


    // 최종
    public void 보상한번에(좀비 좀비) {

        공격_결과_사망(좀비);
        보상_골드(좀비);
        보상_경험치(좀비);
        보상_무찌른좀비수(좀비);
        레벨업(좀비);
    }


    // ------------------------ 전당포 ----------------------------


    //--------------- 구매 -----------------------------
    public void 소지금감소(부품 부품) {

        부품.소지금감소(소지골드);
        소지골드 = 부품.소지금감소(소지골드);
    }


    // 부품 갯수 1씩 증가
    public void 갯수증가(부품 부품) {

        부품.갯수 = 부품.아이템1증가(부품.갯수);
    }


    public void 구매_선택(부품 부품) {

        if (부품.가격 > 소지골드) {
            System.out.println("\n\n소지골드가 부족합니다.");
        } else {

            System.out.println("\n\n" + 부품.품명 + "를 구매했습니다.");
            System.out.println("내 쌈짓돈에서 -" + 부품.가격 + "원 차감됩니다.\n");
            소지금감소(부품);
            갯수증가(부품);

        }
    }


    //--------------- 판매 -----------------------------


    public void 판매_선택(부품 부품) {

        if (부품.갯수 <= 0) {

            System.out.println("\n\n판매할 부품이 부족합니다.");

        } else {

            System.out.println("\n\n" + 부품.품명 + "를 구매했습니다.");
            System.out.println("내 쌈짓돈에서 -" + 부품.가격 + "원 차감됩니다.\n");
            소지금증가(부품);
            갯수감소(부품);

        }
    }

    public void 소지금증가(부품 부품) {

        부품.소지금증가(소지골드);
        소지골드 = 부품.소지금증가(소지골드);
    }


    // 부품 갯수 1씩 증가
    public void 갯수감소(부품 부품) {

        부품.갯수 = 부품.아이템1감소(부품.갯수);
    }


    //--------------------------------- 레벨업 ---------------------------------------------------

    //레벨업 출력 : 1000마다 1레벨업
    public void 레벨업(좀비 좀비) {

        for (int 경험 = 0; 경험 <= 10000; 경험 += 1000) {

            if (경험치 >= 경험 && 경험치 + 좀비.경험치 <= 경험 + 1000) {

                int 레벨오름 = 레벨업(레벨);
                레벨 = 레벨오름;


                System.out.println("                ╔═════════════════════════════╗");
                System.out.println("                            레벨 업!\n");

                System.out.println("                       현재 레벨 : " + 레벨 + "\n" +
                                   "                       현재 경험치 : " + 경험치 + "\n");

                System.out.println("                ╚═════════════════════════════╝\n");

            }

        }
    }





}//~class



